{"version":3,"sources":["test_server.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,QAAQ,WAAR,EAAqB,MAArB,CAA4B,IAA5B,CAAT,C,CAA4C;AAC5C,IAAI,WAAW,CAAf;AACA,IAAI,UAAU,EAAd;;AAEA;AACA;AACA,GAAG,EAAH,CAAM,YAAN,EAAoB,UAAS,YAAT,EAAuB;AACvC;AACA,YAAQ,IAAR,CAAa,YAAb;;AAEA;AACA,iBAAa,IAAb,CAAkB,gBAAlB;;AAEA;AACA,iBAAa,EAAb,CAAgB,YAAhB,EAA8B,YAAW;AACrC,YAAI,QAAQ,QAAQ,OAAR,CAAgB,YAAhB,CAAZ;AACA,YAAI,SAAS,CAAC,CAAd,EAAiB;AACb,oBAAQ,MAAR,CAAe,KAAf,EAAsB,CAAtB;AACA,oBAAQ,IAAR,CAAa,6BAA6B,aAAa,EAA1C,GAA+C,IAA5D;AACH;AACJ,KAND;;AAQA,iBAAa,EAAb,CAAgB,gBAAhB,EAAkC,UAAS,QAAT,EAAmB;AACjD,gBAAQ,IAAR,CAAa,0BAAb;AACA,gBAAQ,IAAR,CAAa,gBAAgB,QAA7B;AACA,gBAAQ,IAAR,CAAa,qBAAqB,aAAa,EAA/C;AACH,KAJD;AAKH,CArBD;;AAuBA;;;;;;;;;AASA;AACA,SAAS,kBAAT,GAA8B;AAC1B,WAAO,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,GAA3B,CAAP;AACH","file":"test_server-compiled.js","sourcesContent":["var io = require('socket.io').listen(8000); // start io server at port 8000 to listen at\nvar sequence = 1;\nvar clients = [];\n\n// Socket Events\n// Event fired every time a new client connects:\nio.on('connection', function(socketClient) {\n    //console.info('New client connected (id=' + socketClient.id + ').');\n    clients.push(socketClient);\n\n    // immediately request Client ID from the newly connected socket\n    socketClient.emit('get: client id');\n\n    // When socket disconnects, remove it from the list:\n    socketClient.on('disconnect', function() {\n        var index = clients.indexOf(socketClient);\n        if (index != -1) {\n            clients.splice(index, 1);\n            console.info('Client disconnected (id=' + socketClient.id + ').');\n        }\n    });\n\n    socketClient.on('set: client id', function(clientID) {\n        console.info('\\nset: client id, CALLED');\n        console.info('client id: ' + clientID);\n        console.info('socketClientID: ' + socketClient.id)\n    });\n});\n\n/*\nsetInterval(function() {\n    clients.forEach(function(socketClient) {\n        io.to(socketClient.id).emit('update: chart data', [generateRandomData(), generateRandomData()]);\n    });\n\n}, 500);\n*/\n\n// random int between 0 to 500\nfunction generateRandomData() {\n    return Math.floor(Math.random() * 500);\n}"]}