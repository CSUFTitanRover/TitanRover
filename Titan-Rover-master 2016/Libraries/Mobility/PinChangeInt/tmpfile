NOTES ================================================================================

Serial.print()----------------

Serial.print() does not work well inside interrupts. This is because it uses interrupts,
and while you are in an interrupt, interrupts are (by default) turned off.
Serial is declared in /usr/share/arduino/hardware/arduino/cores/arduino/HardwareSerial.h .
In the write() method in the .cpp file, for example it says:
...
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  // ???: return 0 here instead?
  while (i == _tx_buffer->tail)
    ;
...
And the ISR is further down in that file (this for the ATmega328 I believe):
ISR(USART_RX_vect)
...

If a user wants to try to use Serial.print() inside an ISR, I believe it's possible
(by turning on interrupts inside the interrupt)...
but it would require them to be aware of any possible contention between the interrupts,
and the print ISRs.


Software Serial----------
Also, the SoftwareSerial library defines ISRs for Pin Change Interrupt ports:

ISR(PCINT0_vect)
{
  SoftwareSerial::handle_interrupt();
}

...It defines the interrupt on all ports, whether it's using them or not
(the library cannot know ahead of time if the user will be using a set of pins
or not).

To ensure compatibility with the SoftwareSerial library, the user should comment
out the ports that they are NOT using with the SoftwareSerial library, in 
/usr/share/arduino/libraries/SoftwareSerial/SoftwareSerial.cpp
and comment out the ports that they ARE using with this library in PinChangeInt.h
